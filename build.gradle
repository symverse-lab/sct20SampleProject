buildscript {
	ext {
		springBootVersion = '2.0.6.RELEASE'
	}
	repositories {
		mavenCentral()  
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2')
		//classpath 'org.springframework:springloaded:1.2.4.RELEASE'
	}
}
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'docker'

bootJar {
    baseName = 'sct20sample-spring-boot-docker'
    version =  '1.0.14'
}


// test 코드 무시
test {
    exclude '**/*'
}



dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    compile('org.springframework.boot:spring-boot-starter-web')
	
	//test starter
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	//gradle symweb3j classpath
	eclipse.classpath {
    	containers 'org.eclipse.jdt.USER_LIBRARY/SymWeb3j'
	}
    //web3j
	compile fileTree(include: ['*.jar'], dir: 'libs/SymWeb3j')
	
	//web3j 관련  -- keyStoreManagement.java에 필요한 파일
	compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.54'
	
	// gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	
	//lombok geter seter plugin
	compile('org.mariadb.jdbc:mariadb-java-client:2.2.5')
	compile('org.projectlombok:lombok:1.16.18')
	
	//json rpc 관련
	compile ('io.reactivex.rxjava2:rxjava:2.2.2')
	// https://mvnrepository.com/artifact/org.json/json
	compile group: 'org.json', name: 'json', version: '20180813'
	// https://mvnrepository.com/artifact/net.minidev/json-smart
	compile group: 'net.minidev', name: 'json-smart', version: '1.0.9' 
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
	
	//java.lang.ClassNotFoundException: okhttp3.Interceptor 발생
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'
	compile 'com.squareup.okhttp3:okhttp:3.8.0'
	
	// 암호화 관련 모듈
	compile group: 'com.github.ulisesbocchio', name: 'jasypt-spring-boot-starter', version: '2.1.1'
	
	
	
	
	//spring boot batch
 	compile("org.springframework.boot:spring-boot-starter-batch")
    compile("org.hsqldb:hsqldb")
    
    //view template
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


// docker build
task buildDocker(type: Docker, dependsOn: build) {
  // push = true
  file(new File(projectDir, "/src/main/docker/")).mkdirs()
  applicationName = jar.baseName
  dockerfile = file('/src/main/docker/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}


